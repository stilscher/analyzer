digraph cfg {
442 -> 5 [ label = "Entry main", color = "green" ];
442[label="442: FunctionEntry main"];
5 -> 13 [ label = "Assign 'x___0 = 0' ", color = "green" ];
5[label="5: Statement x___0 = 0;"];
13 -> 33 [ label = "Test (1,false)", color = "black" ];
13[label="13: Statement pthread_mutex_lock(& __global_lock);"];
13 -> 22 [ label = "Test (1,false)", color = "black" ];
13[label="13: Statement pthread_mutex_lock(& __global_lock);"];
13 -> 14 [ label = "Proc 'pthread_mutex_lock(& __global_lock)'", color = "green" ];
13[label="13: Statement pthread_mutex_lock(& __global_lock);"];
33 -> 10446624154 [ label = "Test (1,false)", color = "black" ];
33[label="33: Statement pthread_mutex_lock(& __global_lock);"];
33 -> 34 [ label = "Proc 'pthread_mutex_lock(& __global_lock)'", color = "green" ];
33[label="33: Statement pthread_mutex_lock(& __global_lock);"];
10446624154 -> 442 [ label = "Ret (None, main)", color = "black" ];
10446624154[label="10446624154: Statement return;"];
34 -> 35 [ label = "Proc 'assert(x___0 == 0)'", color = "green" ];
34[label="34: Statement assert(x___0 == 0);"];
35 -> 38 [ label = "Proc 'pthread_mutex_unlock(& __global_lock)'", color = "green" ];
35[label="35: Statement pthread_mutex_unlock(& __global_lock);"];
38 -> 442 [ label = "Ret (Some 0, main)", color = "green" ];
38[label="38: Statement return (0);"];
22 -> 33 [ label = "Test (1,false)", color = "black" ];
22[label="22: Statement pthread_mutex_lock(& __global_lock);"];
22 -> 23 [ label = "Proc 'pthread_mutex_lock(& __global_lock)'", color = "green" ];
22[label="22: Statement pthread_mutex_lock(& __global_lock);"];
23 -> 24 [ label = "Assign 'x___0 = x___0 - 1' ", color = "green" ];
23[label="23: Statement x___0 --;"];
24 -> 33 [ label = "Proc 'pthread_mutex_unlock(& __global_lock)'", color = "green" ];
24[label="24: Statement pthread_mutex_unlock(& __global_lock);"];
14 -> 15 [ label = "Assign 'x___0 = x___0 + 1' ", color = "green" ];
14[label="14: Statement x___0 ++;"];
15 -> 22 [ label = "Proc 'pthread_mutex_unlock(& __global_lock)'", color = "green" ];
15[label="15: Statement pthread_mutex_unlock(& __global_lock);"];
437 -> 0 [ label = "Entry assume_abort_if_not", color = "green" ];
437[label="437: FunctionEntry assume_abort_if_not"];
0 -> 2 [ label = "Test (! cond,true)", color = "green" ];
0[label="0: Statement if (! cond) {
            {
            abort();
            }
}"];
0 -> 3 [ label = "Test (! cond,false)", color = "green" ];
0[label="0: Statement if (! cond) {
            {
            abort();
            }
}"];
2 -> 3 [ label = "Proc 'abort()'", color = "green" ];
2[label="2: Statement abort();"];
3 -> 437 [ label = "Ret (None, assume_abort_if_not)", color = "green" ];
3[label="3: Statement return;"];
}